plugins {
    id "java-library"
    id "application"
    id "io.qameta.allure" version '2.8.1'
}

repositories {
    maven {url = "https://dl.bintray.com/qameta/maven-unstable/"}
    mavenCentral()
}

def allureVersion = "2.13.8",
    selenideVersion = "5.21.0",
    junitVersion = "5.7.0"

allure {
    version = "${allureVersion}"
    autoconfigure = true
    aspectjweaver = true
    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    testImplementation (
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "ch.qos.logback:logback-classic:1.2.3",
            "com.github.javafaker:javafaker:1.0.2",
            "org.hamcrest:hamcrest-all:1.3",
            "org.aeonbits.owner:owner:1.0.12",
            "io.qameta.allure:allure-ee-junit-platform:3.28.2",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    systemProperties += System.properties
    System.setProperty("junit.jupiter.extensions.autodetection.enabled", "true")
    if (System.getProperty("threads") != null) {
        systemProperties += [
                "junit.jupiter.execution.parallel.enabled"                 : true,
                "junit.jupiter.execution.parallel.mode.default"            : "concurrent",
                "junit.jupiter.execution.parallel.mode.classes.default"    : "concurrent",
                "junit.jupiter.execution.parallel.config.strategy"         : "fixed",
                "junit.jupiter.execution.parallel.config.fixed.parallelism": System.getProperty("threads").toInteger()
        ]
    }

}
test {
    useJUnitPlatform()
}
